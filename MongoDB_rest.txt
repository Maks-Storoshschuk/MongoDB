// 1. Напишіть запит MongoDB, щоб відобразити всі документи в ресторанах колекції.
// db.getCollection('rest').find({})

// 2. Напишіть запит MongoDB для відображення полів restaurant_id, імені, району та кухні для всіх документів у ресторані збору.
// db.getCollection('rest').find({},{restaurant_id:1,name:1,borough:1,cuisine:1})

// 3. Напишіть запит MongoDB для відображення полів restaurant_id, імені, району та кухні, але виключіть поле _id для всіх документів у ресторані збору.
// db.getCollection('rest').find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})

// 4. Напишіть запит MongoDB для відображення полів restaurant_id, імені, району та поштового індексу, але виключіть поле _id для всіх документів у ресторані збору.
// db.getCollection('rest').find({},{restaurant_id:1,name:1,borough:1,zipcode:1,_id:0})

// 5. Напишіть запит MongoDB, щоб відобразити весь ресторан, що в районі Бронкс.
// db.getCollection('rest').find({borough:'Bronx'})

// 6. Напишіть запит MongoDB, щоб відобразити перші 5 ресторанів у районі Бронкс.
// db.getCollection('rest').find({borough:'Bronx'}).limit(5)

// 7. Напишіть запит MongoDB, щоб відобразити наступні 5 ресторанів після пропуску перших 5, які знаходяться в районі Бронкс.
// db.getCollection('rest').find({borough:'Bronx'}).skip(5).limit(5)

// 8. Напишіть запит MongoDB, щоб знайти ресторани, які набрали більше 90 балів.
// db.getCollection('rest').find({'grades.score':{$gte:90}})

// 9. Напишіть запит MongoDB, щоб знайти ресторани, які набрали бал більше 80, але менше 100.
// db.getCollection('rest').find({$and:[{'grades.score':{$gte:80}},{'grades.score':{$lte:100}}]})

// 10. Напишіть запит MongoDB, щоб знайти ресторани, які знаходяться за широтою, меншою за -95.754168
// db.getCollection('rest').find({"address.coord":{$lte:-95.754168}})

// 11. Напишіть запит MongoDB, щоб знайти ресторани, де не готують жодну американську кухню, а їх оцінка більше 70 і широта менше -65.754168.
// db.getCollection('rest').find({$and:[{"address.coord":{$lte:-65.754168},'grades.score':{$gte:70},cuisine:{$not:/.*american.*/i}}]})
// 
// 12. Напишіть запит MongoDB, щоб знайти ресторани, які не готують жодної "американської" кухні та набрали оцінку більше 70 і розташовані на довготі менше -65.754168.
//     Примітка: Виконайте цей запит без використання оператора $ і.
// db.getCollection('rest').find({"address.coord":{$lte:-65.754168},'grades.score':{$gte:70},cuisine:{$not:/.*american.*/i}})

// 13. Напишіть запит MongoDB, щоб знайти ресторани, де не готують жодну кухню "американської" та отримали оцінку "А", що не належить округу Бруклін. Документ повинен відображатися відповідно до кухні в порядку спадання.
// db.getCollection('rest').find({cuisine:{$not:/.*american.*/i},'grades.grade':'A',borough:{$not:/.*brooklyn.*/i}}).sort({cuisine:-1})
 
// 14. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, район та кухню для тих ресторанів, які містять "Wil" як перші три літери для його назви.
// db.getCollection('rest').find({name:/^Wil/},{_id:1,name:1,borough:1,cuisine:1})

// 15. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, район та кухню для тих ресторанів, які містять "ces" як останні три літери для його назви.
// db.getCollection('rest').find({name:/ces$/},{_id:1,name:1,borough:1,cuisine:1})

// 16. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, його назву, район та кухню для тих ресторанів, які десь у його назві містять "Reg" у вигляді трьох літер.
// db.getCollection('rest').find({name:/.*Reg.*/},{_id:1,name:1,borough:1,cuisine:1})

// 17. Напишіть запит MongoDB, щоб знайти ресторани, що належать до району Бронкс і готують американську або китайську страву.
// db.getCollection('rest').find({borough:'Bronx',$or:[{cuisine:/.*American.*/},{cuisine:/.*Chinese.*/}]},{})

// 18. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, район та кухню для тих ресторанів, які належать до району Стейтен -Айленд або Квінз або Бронксор Бруклін.
// db.getCollection('rest').find({$or:[{borough:'Staten Island'},{borough:'Queens'},{borough:'Bronx'},{borough:'Brooklyn'}]},{_id:1,name:1,borough:1,cuisine:1})

// 19. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, район та кухню для тих ресторанів, які не належать до району Стейтен -Айленд або Квінз або Бронксор Бруклін.
// db.getCollection('rest').find({$and:[{borough:{$not:/.*Staten Island.*/}},
//                                      {borough:{$not:/.*Queens.*/}},
//                                      {borough:{$not:/.*Bronx.*/}},
//                                      {borough:{$not:/.*Brooklyn.*/}}
//                                  ]},
//                                {_id:1,name:1,borough:1,cuisine:1}
//                               )

// 20. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, район та кухню для тих ресторанів, які набрали оцінку не більше 10.
// db.getCollection('rest').find({'grades.score':{$lte:10}},{_id:1,name:1,borough:1,cuisine:1})

// 21. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, район та кухню для тих ресторанів, де готували страву,
// окрім «американського» та «китайського», або назва ресторану починається на літеру «Віл».
// db.getCollection('rest').find({$or:[
//     {$and:[
//         {cuisine:{$not:/.*American.*/}},
//         {cuisine:{$not:/.*Chinese.*/}}      
//     ]},
//     {name:/^Wil/}]},
//     {_id:1,name:1,borough:1,cuisine:1}
//     )

// 22. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, його назву та оцінки для тих ресторанів,
// які досягли оцінки "А" та набрали 11 балів за датою ISO "2014-08-11T00: 00: 00Z" серед багатьох дат опитування. .
// db.getCollection('rest').find({$and:[
//     {'grades.grade':'A'},
//     {'grades.score':11},
//     {'grades.date':ISODate("2014-08-11T00:00:00Z")}
//     ]},
//     {_id:1,name:1,grades:1})

// 23. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву та оцінки для тих ресторанів,
// де 2-й елемент масиву оцінок містить оцінку "А" та оцінку 9 за датою ISO "2014-08-11T00: 00: 00Z".
// db.getCollection('rest').find({$and:[
//     {'grades.1.grade':'A'},
//     {'grades.1.score':9},
//     {'grades.1.date':ISODate("2014-08-11T00:00:00Z")}
//     ]},
//     {_id:1,name:1,grades:1})
 
// 24. Напишіть запит MongoDB, щоб знайти ідентифікатор ресторану, назву, адресу та географічне розташування тих ресторанів,
// де 2 -й елемент масиву координат містить значення, яке становить більше 42 і до 52.
// db.getCollection('rest').find({$and:[
//     {'address.coord.1':{$gt:42}},
//     {'address.coord.1':{$lt:52}}]},
//     {_id:1,name:1,address:1})
//  
// 25. Напишіть запит MongoDB, щоб упорядкувати назви ресторанів у порядку зростання разом із усіма стовпцями.
// db.getCollection('rest').find({}).sort({name:1})

// 26. Напишіть запит MongoDB, щоб упорядкувати назви ресторанів за спаданням разом із усіма стовпцями.
// db.getCollection('rest').find({}).sort({name:-1})

// 27. Напишіть запит MongoDB, щоб упорядкувати назву кухні в порядку зростання, і для цієї ж місцевості кухня має бути в порядку спадання.
// db.getCollection('rest').find({}).sort({cuisine:1},{borough:-1})
//                             ????

// 28. Напишіть запит MongoDB, щоб дізнатися, чи всі адреси містять вулицю чи ні.
// db.getCollection('rest').find({'address.street':{$exists:0}})

// 29. Напишіть запит MongoDB, який вибере всі документи з колекції ресторанів, де значенням координатного поля є Double.

// тут подвійне поле
// db.getCollection('rest').find({$and:[
//     {'address.coord.0':{$exists:1}},
//     {'address.coord.1':{$exists:1}}
//     ]})

// тут поля продубльовані
// db.getCollection('rest').find({
//     'address.coord.0':{$eq:'address.coord.1'}})

// 30. Напишіть запит MongoDB, який вибере ідентифікатор ресторану, назву та оцінки для тих ресторанів, які повертають 0 як залишок після поділу оцінки на 7.
// db.getCollection('rest').find({'grades.score':{$mod: [7, 0]}},{name:1,grades:1})

// 31. Напишіть запит MongoDB, щоб знайти назву ресторану, район, довготу та ставлення та кухню для тих ресторанів, де десь у назві міститься "mon" у вигляді трьох літер.
// db.getCollection('rest').find({name:/.*mon.*/},{_id:0,name:1,borough:1,'address.coord':1,cuisine:1})
 
// 32. Напишіть запит MongoDB, щоб знайти назву ресторану, район, довготу та широту та кухню для тих ресторанів, які містять "Mad" як перші три літери його назви.
// db.getCollection('rest').find({name:/^Mad/},{_id:0,name:1,borough:1,'address.coord':1,cuisine:1})